lcs.h:

int lcs(int*, int*, int, int);
void int_to_array(int*, int, int);
int max(int a, int b);

lcs.c:

#include "lcs.h"
#include "math.h"

int max(int a, int b) {
	if (a > b) {
		return a;
	}
	else {
		return b;
	}
}

int lcs(int* text1, int* text2, int m, int n) {
	if (n > 0 && m > 0 && (text1[m - 1] == text2[n - 1])) {
		return 1 + lcs(text1, text2, m - 1, n - 1);
	}
	else if (n > 0 && m > 0 && (text1[m - 1] != text2[n - 1])) {
		return max(lcs(text1, text2, m - 1, n), lcs(text1, text2, m, n - 1));
	}
	else {
		return 0;
	}
}
void int_to_array(int* array1, int value, int index) {
	for (int i = 0; i < index; i++) {
		array1[i] = (value / (int)pow(10, index - 1 - i)) % 10;
	}
}

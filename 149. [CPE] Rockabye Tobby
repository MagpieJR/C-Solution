#include <stdio.h>
#include <string.h>
#include <stdlib.h>

struct data {
	char* med;
	int time;
	int square;
};

void F(struct data *array, int size, int *k) {
	if ((*k) != 0) {
		int min = array[0].time, index = 0;
		for (int i = 1; i < size; i++) {
			if (array[i].time < min) {
				min = array[i].time;
				index = i;
			}
			else if (array[i].time == min) {
				if (i < index) {
					min = array[i].time;
					index = i;
				}
			}
		}


		if ((*k) != 1) {
			printf("%d %s\n", array[index].time, array[index].med);
		}
		else {
			printf("%d %s\n", array[index].time, array[index].med);
		}
		array[index].time += array[index].square;
		(*k) = (*k) - 1;
		F(array, size, k);
	}
}

int main() {
	int T, n , k;
	char* string;
	struct data* Array;
	scanf("%d", &T);

	for (int i = 0; i < T; i++) {
		scanf("%d %d", &n, &k);
		Array = (struct data*)malloc(sizeof(struct data) * n);
		string = (char*)malloc(sizeof(char) * 15);

		for (int j = 0; j < n; j++) {
			Array[j].med = (char*)malloc(sizeof(char) * (strlen(string) + 1));
			scanf("%s", string);
			strcpy(Array[j].med, string);
			scanf("%d", &Array[j].time);
			Array[j].square = Array[j].time;
		}

		F(Array, n, &k);


		for (int j = 0; j < n; j++) {
			free(Array[j].med);
		}
		free(Array);
		free(string);
	}
	return 0;
}

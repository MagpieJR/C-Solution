#include <stdio.h>
#include <string.h>
#include <math.h>
int dig(int n) {
	int digit = 1;
	while (1) {
		n /= 10;
		if (n == 0) {
			break;
		}
		else {
			digit++;
		}
	}
	return digit;
}

int Isoverflow(long int x, long int y) {
	int flag = 0;
	long int z = x + y;
	if (x > 0 && y > 0 && z < 0) {
		flag = 1;
	}
	else if (x < 0 && y < 0 && z > 0) {
		flag = 0;
	}
	return flag;
}

void palin(long int n, long int* re, long int* palin,long int* overflow) {
	long int reverse = 0, digit, flag = 1, origin = n;
	while (1) {
		reverse = reverse * 10 + n % 10;
		n /= 10;
		if (n == 0) break;
	}
	*overflow = Isoverflow(origin, reverse);
	origin += reverse;
	digit = dig(origin);
	int mu = pow(10, (digit - 1)), ten = 1;
	for (int i = 0; i < digit / 2; i++) {
		if ((origin / ten) % 10 != (origin / mu) % 10) {
			flag = 0;
			break;
		}
		else {
			mu /= 10; ten *= 10;
		}
	}
	*re = origin;
	*palin = flag;
}

void f(long int n,long int* time,long int* result,long int * over) {
	int count = 0;
	while (1) {
		long int re, flag, over1;
		palin(n, &re, &flag, &over1);	
		count++;
		if (over1 == 1) {
			*over = over1;
			break;
		}
		if (flag == 1) {
			*time = count;
			*result = re;
			*over = over1;
			break;
		}
		n = re;
	}
}




void main() {
	long int n, p, time, result, overflow;
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &p);
		if (i == 0) {
			f(p, &time, &result, &overflow);
			if (overflow) {
				printf("overflow!");
			}
			else {
				printf("%d %d", time, result);
			}
		}
		else {
			f(p, &time, &result, &overflow);
			if (overflow) {
				printf("\noverflow!");
			}
			else {
				printf("\n%d %d", time, result);
			}
		}
	}
}

